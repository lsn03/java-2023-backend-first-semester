javap -p -v -l Fibonacci.class
Classfile /home/sergey/Programming/Java/ConsoleApplication/java-course-2023/project-template/src/main/java/edu/hw11/Fibonacci.class
  Last modified 14 дек. 2023 г.; size 230 bytes
  SHA-256 checksum ec97cca713990d20af97519d794b7b5871c1a9c9846ac50795f033e1a8f97c02
public class Fibonacci
  minor version: 0
  major version: 52
  flags: (0x0001) ACC_PUBLIC
  this_class: #4                          // Fibonacci
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 0
Constant pool:
   #1 = Utf8               <init>
   #2 = Utf8               ()V
   #3 = Utf8               Fibonacci
   #4 = Class              #3             // Fibonacci
   #5 = Utf8               java/lang/Object
   #6 = Class              #5             // java/lang/Object
   #7 = NameAndType        #1:#2          // "<init>":()V
   #8 = Methodref          #6.#7          // java/lang/Object."<init>":()V
   #9 = Utf8               fib
  #10 = Utf8               (I)J
  #11 = Utf8               Code
  #12 = Utf8               StackMapTable
{
  public Fibonacci();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method java/lang/Object."<init>":()V
         4: return

  public long fib(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=2
         0: iload_1
         1: iconst_1
         2: if_icmpgt     8
         5: iload_1
         6: i2l
         7: lreturn
         8: lconst_1
         9: lstore_2
        10: lconst_1
        11: lstore_3
        12: iconst_3
        13: istore        4
        15: lload_2
        16: lload_3
        17: ladd
        18: lstore        5
        20: lload_3
        21: lstore_2
        22: lload         5
        24: lstore_3
        25: iinc          4, 1
        28: iload         4
        30: iload_1
        31: if_icmple     15
        34: lload_3
        35: lreturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 6
          locals = [ top, top, int ]
}
